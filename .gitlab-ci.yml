image: docker:git
services:
    - docker:dind

stages:
  - test
  - build
  - deploy

teste-app:
  stage: test
  image: python:3.9.10-slim-bullseye
  services:
      - docker:dind
  script:
      - apt update && apt install -y python3-mysqldb libmariadb-dev gcc
      - pip install -r requirements.txt
      - nosetests --with-xunit --with-coverage --cover-package=project test_users.py
  artifacts:
    when: always
    paths:
      - nosetests.xml
    reports:
      junit: nosetests.xml

build:
  stage: build
  dependencies:
    - teste-app
  services:
      - docker:dind
  script:
      - docker login -u gitlab-ci-token -p "$CI_JOB_TOKEN" "$CI_REGISTRY"
      - docker build -t ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA} .
      - docker push ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}

deploy_homolog:
  stage: deploy
  dependencies:
    - build
  image: alpine
  script:
      - apk update && apk add --no-cache curl
      - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      - chmod +x ./kubectl && mv ./kubectl /usr/local/bin/kubectl
      - mkdir -p $HOME/.kube
      - echo -n ${kubeconfig} | base64 -d $HOME/.kube/config
      - kubectl set image deployment/web simplepythonflask=${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA} -n homolog
      - kubectl get pods -n homolog
  tags:
      - curso-cicd-runner

include:
  - template: Jobs/SAST.gitlab-ci.yml

spotbugs-sast:
  variables:
    FAIL_NEVER: 1